class Rally

	values
		public TIME_PENALTY = 50;

	types
		public String = seq1 of char;
		public RallyCategory = Type`RallyType;
		public RallyDays = seq1 of Day;
		public RallyParticipants = set1 of Team;
		public RallyWinner = Team;
		public RallyTeamSections = map Team to seq of Section;

	instance variables
	
		public category: RallyCategory;
		public local: String;
		public days: RallyDays;
		public participants: RallyParticipants;
		public winner: RallyWinner;
		public teamSections: RallyTeamSections := {|->};
		
	operations

		public Rally(c: RallyCategory, l: String, d: RallyDays, p: RallyParticipants) res: Rally == (
			category := c;
			local := l;
			days := d;
			participants := p;
		)
		pre len d > 0 and card p > 1
		post res.days = d and res.participants = p;
		
		public assignWinner(w: Team) == (
			winner := w;
		)
		pre w in set participants  
		post winner = w;
		
		public mapTeamSections() == (
			for d in days do
				for all t in set d.teams do
					(
					if(t in set dom teamSections)
						then teamSections(t) := teamSections(t) ^ d.sections
					else teamSections := teamSections munion {t |-> d.sections};
					)
		)
	
end Rally