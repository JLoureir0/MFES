class Team
instance variables
	public name: seq of char;
	public pilot: Pilot;
	public coPilot: Pilot;
	public car: Car;
	public sponsors: set of Sponsor := {};
	public totalTime: real := 0;

operations
	public Team(n: seq of char, p: Pilot, cp: Pilot, c: Car) res: Team == (
		name := n;
		pilot := p;
		coPilot := cp;
		car := c;
	)
	pre p.type = <Pilot> and cp.type = <CoPilot>
	post res.name = n and res.pilot = p and res.coPilot = cp and res.car = c;
	
	public addSponsor(sponsor: Sponsor) == (
 		sponsors := sponsors union {sponsor};
 	)
 	pre sponsor not in set sponsors
 	post sponsor in set sponsors;
 	
 	public removeSponsor(sponsor: Sponsor) == (
 		sponsors := sponsors \ {sponsor};
 	)
 	pre sponsor in set sponsors
 	post sponsor not in set sponsors;
 	
 	public addTime(t: real) == (
 		totalTime := totalTime + t;
 	)
 	pre totalTime >= 0 and t > 0
 	post totalTime = totalTime + t;
 	
 	--in case a team misses a day of competition
 	public penalty() == (
 		totalTime := totalTime + 50;
 	)
 	pre totalTime >= 0
 	post totalTime = totalTime + 50;
	
end Team