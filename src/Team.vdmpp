class Team

	values
		public INIT_AT_ZERO = 0;

	types
		public String = seq1 of char;
		public RealNumber = real;
		public PilotType = Pilot;
		public TeamCar = Car;
		public TeamSponsors = set of Sponsor;
		
	instance variables
		public name: String;
		public pilot: PilotType;
		public coPilot: PilotType;
		public car: TeamCar;
		public sponsors: TeamSponsors := {};
		public totalTime: RealNumber := INIT_AT_ZERO;
	
	operations
		public Team(n: String, p: PilotType, cp: PilotType, c: TeamCar) res: Team == (
			name := n;
			pilot := p;
			coPilot := cp;
			car := c;
		)
		pre p.type = <Pilot> and cp.type = <CoPilot>
		post res.name = n and res.pilot = p and res.coPilot = cp and res.car = c;
		
		public addSponsor(sponsor: Sponsor) == (
	 		sponsors := sponsors union {sponsor};
	 	)
	 	pre sponsor not in set sponsors
	 	post sponsor in set sponsors;
	 	
	 	public removeSponsor(sponsor: Sponsor) == (
	 		sponsors := sponsors \ {sponsor};
	 	)
	 	pre sponsor in set sponsors
	 	post sponsor not in set sponsors;
	 	
	 	public addTime(t: RealNumber) == (
	 		totalTime := totalTime + t;
	 	)
	 	pre totalTime >= 0 and t > 0
	 	post totalTime = totalTime + t;
	 	
	 	--in case a team misses a day of competition
	 	public penalty() == (
	 		addTime(Rally`TIME_PENALTY);
	 	)
	 	pre totalTime >= 0
	 	post totalTime = totalTime + Rally`TIME_PENALTY;
	
end Team