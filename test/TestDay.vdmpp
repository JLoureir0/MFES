class TestDay is subclass of TestSuite

	operations
  	public testConstructor: () ==> ()
	  	testConstructor() == (
	  		
	  		IO`println("\t\t test constructor");
	  		
	  		(
	  			dcl s1: Section := new Section("Venezia", "Bologna", 248.41);
					dcl s2: Section := new Section("Milano", "Verona", 175.32);
					
					dcl sections: seq of Section := [s1, s2];
					
					dcl p1: Pilot := new Pilot("Sébastien", "Loeb", 43, <Male>, <Pilot>);
					dcl cp1: Pilot := new Pilot("Daniel", "Elena", 45, <Male>, <CoPilot>);
					dcl c1: Car := new Car("Ford", 1271.71, 2.5, 275.5);
					dcl t1: Team := new Team("M-Sport World Rally Team", p1, cp1, c1);
					
					dcl p2: Pilot := new Pilot("Sébastien", "Ogier", 34, <Male>, <Pilot>);
					dcl cp2: Pilot := new Pilot("Julien", "Ingrassia", 38, <Male>, <CoPilot>);
					dcl c2: Car := new Car("Volkswagen", 1200, 3.5, 250);
					dcl t2: Team := new Team("M-Sport World Rally Team", p2, cp2, c2);
					
					dcl teams: set of Team := {t1, t2};
					
					dcl date : Day`Date := mk_Day`Date(2017, 10, 23);
					
					dcl d: Day := new Day(sections, teams, date);
					
		  		assertEqual("Venezia", d.sections(1).startLocation);
		  		assertEqual("Bologna", d.sections(1).endLocation);
		    	assertTrue(t1 in set d.teams);
		    	assertTrue(t2 in set d.teams);
	    	)
  		);
  	
  	public testAddTeamRecord: () ==> ()
  		testAddTeamRecord() == (
  		
	  		IO`println("\t\t test add team record");
	  		
	  		(
	  			dcl s1: Section := new Section("Venezia", "Bologna", 248.41);
					dcl s2: Section := new Section("Milano", "Verona", 175.32);
					
					dcl sections: seq of Section := [s1, s2];
					
					dcl p1: Pilot := new Pilot("Sébastien", "Loeb", 43, <Male>, <Pilot>);
					dcl cp1: Pilot := new Pilot("Daniel", "Elena", 45, <Male>, <CoPilot>);
					dcl c1: Car := new Car("Ford", 1271.71, 2.5, 275.5);
					dcl t1: Team := new Team("M-Sport World Rally Team", p1, cp1, c1);
					
					dcl p2: Pilot := new Pilot("Sébastien", "Ogier", 34, <Male>, <Pilot>);
					dcl cp2: Pilot := new Pilot("Julien", "Ingrassia", 38, <Male>, <CoPilot>);
					dcl c2: Car := new Car("Volkswagen", 1200, 3.5, 250);
					dcl t2: Team := new Team("M-Sport World Rally Team", p2, cp2, c2);
					
					dcl teams: set of Team := {t1, t2};
					
					dcl date : Day`Date := mk_Day`Date(2017, 10, 23);
					
					dcl d: Day := new Day(sections, teams, date);
		  		
			 		d.addTeamRecord(t1, 500);
			 		d.addTeamRecord(t2, 600);
						
					--IO`printf("\t\t Day Stats: %s\n", [d.teamsStats]);
						
					assertTrue(t1 in set dom d.teamsStats);
					assertEqual(423.73/500, d.teamsStats(t1).averageSpeed);
				)
		
		  );
	  
	  public testGetTeamsRecords: () ==> ()
		  testGetTeamsRecords() == (
		  
		  	IO`println("\t\t test get teams records");
		  	
		  	(
		  		dcl s1: Section := new Section("Venezia", "Bologna", 248.41);
					dcl s2: Section := new Section("Milano", "Verona", 175.32);
					
					dcl sections: seq of Section := [s1, s2];
		  	 
		  	 	dcl p1: Pilot := new Pilot("Sébastien", "Loeb", 43, <Male>, <Pilot>);
					dcl cp1: Pilot := new Pilot("Daniel", "Elena", 45, <Male>, <CoPilot>);
					dcl c1: Car := new Car("Ford", 1271.71, 2.5, 275.5);
					dcl t1: Team := new Team("M-Sport World Rally Team", p1, cp1, c1);
		  	 
		  		dcl p3: Pilot := new Pilot("Colin", "McRae", 41, <Male>, <Pilot>);
					dcl cp3: Pilot := new Pilot("Nicky", "Grist", 45, <Male>, <CoPilot>);
					dcl c3: Car := new Car("Subaru", 1271.71, 2.5, 275.5);
					dcl t3: Team := new Team("Kronos", p3, cp3, c3);
					
					dcl teams: set of Team := {t1, t3};
					
					dcl date : Day`Date := mk_Day`Date(2017, 10, 23);
					
					dcl d: Day := new Day(sections, teams, date);
					
					s1.addTeamRecord(t3, 123);
					s1.addTeamRecord(t1, 128);
					s2.addTeamRecord(t3, 210);
					s2.addTeamRecord(t1, 207);
					
					d.getTeamsRecords();
					
					--IO`printf("\t\t Day Stats: %s\n", [d.teamsStats]);
					
					assertTrue(t1 in set dom d.teamsStats);
					assertEqual(423.73/333, d.teamsStats(t3).averageSpeed);
		  	)
		  	
		  );

  	public testAll: () ==> ()
	  	testAll() == (
	    	IO`println("\t day tests");
	    	testConstructor();
	    	testAddTeamRecord();
	    	testGetTeamsRecords();
  		);

end TestDay