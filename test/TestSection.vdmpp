class TestSection is subclass of TestSuite

	instance variables
		s: Section := new Section("Venezia", "Bologna", 248.41);
		p: PointOfInterest := new PointOfInterest("Colosseo", 20, <Locality>);
		sc: Sector := new Sector("Piazza D'el Mar", 20);
	
	operations
	  public testConstructor: () ==> ()
	  	testConstructor() == (
		    IO`println("\t\t test constructor");
		    assertEqual("Venezia", s.startLocation);
		    assertEqual("Bologna", s.endLocation);
		    assertEqual(248.41, s.distance);
		   );
	   
	  public testAddSector: () ==> ()
		  testAddSector() == (
		    IO`println("\t\t test add sector");
		    s.addSector(sc);
		    assertTrue(sc in set s.sectors);
		   );
	   
		public testRemoveSector: () ==> ()
			testRemoveSector() == (
		  	IO`println("\t\t test remove sector");
		  	s.removeSector(sc);
		    assertTrue(sc not in set s.sectors);
		  );
	   
		public testAddPointOfInterest: () ==> ()
			testAddPointOfInterest() == (
		    IO`println("\t\t test add point of interest");
		    s.addPointOfInterest(p);
		    assertTrue(p in set s.pointsOfInterest);
		   );
	   
		public testRemovePointOfInterest: () ==> ()
			testRemovePointOfInterest() == (
		  	IO`println("\t\t test remove point of interest");
		  	s.removePointOfInterest(p);
		    assertTrue(p not in set s.pointsOfInterest);
		  );
	  
	  public testAddTeamRecord: () ==> ()
		  testAddTeamRecord() == (
		  	
		  	IO`println("\t\t test add team record");
		  	
		  	(
		  		dcl s2: Section := new Section("Mt Carlo", "Vitrolles", 25.4);
		  		dcl p1: Pilot := new Pilot("Sébastien", "Loeb", 43, <Male>, <Pilot>);
					dcl cp1: Pilot := new Pilot("Daniel", "Elena", 45, <Male>, <CoPilot>);
					dcl c1: Car := new Car("Ford", 1271.71, 2.5, 275.5);
					dcl t1: Team := new Team("M-Sport World Rally Team", p1, cp1, c1);
					
					s2.addTeamRecord(t1, 300);
					
					--IO`printf("\t\t Section Stats: %s\n", [s.teamsStats]);
					
					assertTrue(t1 in set dom s2.teamsStats);
					assertEqual(25.4/300, s2.teamsStats(t1).averageSpeed);
		  	)
		  	
		  );
	  
	  public testGetTeamsRecords: () ==> ()
		  testGetTeamsRecords() == (
		  	
		  	IO`println("\t\t test get teams records");
		  	
		  	(
		  		dcl s2: Section := new Section("Mt Carlo", "Vitrolles", 25.4);
		  		
		  		dcl sc2: Sector := new Sector("Sanremo", 5.4);
		  	
		  		dcl p1: Pilot := new Pilot("Sébastien", "Loeb", 43, <Male>, <Pilot>);
					dcl cp1: Pilot := new Pilot("Daniel", "Elena", 45, <Male>, <CoPilot>);
					dcl c1: Car := new Car("Ford", 1271.71, 2.5, 275.5);
					dcl t1: Team := new Team("M-Sport World Rally Team", p1, cp1, c1);
					
					sc.addTeamRecord(t1, 15);
					sc2.addTeamRecord(t1, 7);
							
					s2.addSector(sc);
					s2.addSector(sc2);
					
					s2.getTeamsRecords();
					
					--IO`printf("\t\t Section Stats: %s\n", [s2.teamsStats]);
					
					assertTrue(t1 in set dom s2.teamsStats);
					assertEqual(25.4/22, s2.teamsStats(t1).averageSpeed);
		  	)
		  	
		  );
	
	  public testAll: () ==> ()
	  	testAll() == (
		    IO`println("\t section tests");
		    testConstructor();
		    testAddPointOfInterest();
		    testRemovePointOfInterest();
		    testAddSector();
		    testRemoveSector();
		    testAddTeamRecord();
		    testGetTeamsRecords();
		  );

end TestSection